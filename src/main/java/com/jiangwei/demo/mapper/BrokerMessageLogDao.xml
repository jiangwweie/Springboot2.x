<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiangwei.demo.dao.BrokerMessageLogDao">
  <resultMap id="BaseResultMap" type="com.jiangwei.demo.entity.BrokerMessageLog">
    <!--@mbg.generated-->
    <!--@Table broker_message_log-->
    <id column="message_id" jdbcType="VARCHAR" property="messageId" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="try_count" jdbcType="INTEGER" property="tryCount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="next_retry" jdbcType="VARCHAR" property="nextRetry" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    message_id, message, try_count, `status`, next_retry, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from broker_message_log
    where message_id = #{messageId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from broker_message_log
    where message_id = #{messageId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jiangwei.demo.entity.BrokerMessageLog">
    <!--@mbg.generated-->
    insert into broker_message_log (message_id, message, try_count,
    `status`, next_retry, create_time,
    update_time)
    values (#{messageId,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{tryCount,jdbcType=INTEGER},
    #{status,jdbcType=VARCHAR}, #{nextRetry,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
    #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jiangwei.demo.entity.BrokerMessageLog">
    <!--@mbg.generated-->
    insert into broker_message_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="tryCount != null">
        try_count,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="nextRetry != null">
        next_retry,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="tryCount != null">
        #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="nextRetry != null">
        #{nextRetry,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiangwei.demo.entity.BrokerMessageLog">
    <!--@mbg.generated-->
    update broker_message_log
    <set>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="tryCount != null">
        try_count = #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="nextRetry != null">
        next_retry = #{nextRetry,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiangwei.demo.entity.BrokerMessageLog">
    <!--@mbg.generated-->
    update broker_message_log
    set message = #{message,jdbcType=VARCHAR},
    try_count = #{tryCount,jdbcType=INTEGER},
    `status` = #{status,jdbcType=VARCHAR},
    next_retry = #{nextRetry,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=VARCHAR},
    update_time = #{updateTime,jdbcType=VARCHAR}
    where message_id = #{messageId,jdbcType=VARCHAR}
  </update>


  <select id="query4StatusAndTimeoutMessage" resultMap="BaseResultMap" parameterType="long">
    select
    <include refid="Base_Column_List"></include>
    from broker_message_log
    where status = '0'
    and  #{now_time} > next_retry
  </select>


  <update id="update4ReSend"  >
    update broker_message_log  bml
    set  bml.try_count = bml.try_count + 1 ,
         update_time = #{update_time}
    where bml.message_id = #{message_id}
  </update>

  <update id="changeBrokerMessageLogStatus"  >
    update broker_message_log  bml
    set  bml.status = #{status} ,
         bml.update_time = #{update_time}
    where bml.message_id = #{message_id}
  </update>

</mapper>